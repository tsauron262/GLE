//
// Buttons
// --------------------------------------------------


// Base styles
// --------------------------------------------------

.btn {
    display: inline-block;
    margin-bottom: 0; // For input.btn
    font-weight: $btn-font-weight;
    text-align: center;
    vertical-align: middle;
    touch-action: manipulation;
    cursor: pointer;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid transparent;
    white-space: nowrap;
    @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base);
    @include user-select(none);
    @include transition(all 0.3s ease);

    &,
    &:active,
        &.active {
        &:focus,
            &.focus {
            @include tab-focus;
        }
    }

    &:hover,
        &:focus,
        &.focus {
        color: $btn-default-color;
        text-decoration: none;
    }

    &:active,
        &.active {
        outline: 0;
        background-image: none;
        @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        cursor: $cursor-disabled;
        @include opacity(.65);
        @include box-shadow(none);
    }

    // [converter] extracted a& to a.btn
}

a.btn {
    &.disabled,
    fieldset[disabled] & {
        pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
    }
}


// Alternate buttons
// --------------------------------------------------

.btn-default,
.btn-default-secondary,
.btn-default-success,
.btn-default-info,
.btn-default-warning,
.btn-default-danger
{
    @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);
    &:hover {

    }
}
.btn-default:hover {
    color: #fff!important;
    background-color: $primary!important;
    border-color: $primary!important;
}
.btn-default-secondary:hover {
    color: #fff!important;
    background-color: $secondary!important;
    border-color: $secondary!important;
}
.btn-default-success:hover {
    color: #fff!important;
    background-color: $success!important;
    border-color: $success!important;
}
.btn-default-info:hover {
    color: #fff!important;
    background-color: $info!important;
    border-color: $info!important;
}
.btn-default-warning:hover {
    color: #fff!important;
    background-color: $warning!important;
    border-color: $warning!important;
}
.btn-default-danger:hover {
    color: #fff!important;
    background-color: $danger!important;
    border-color: $danger!important;
}

.btn-primary {
    @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
}
.btn-secondary {
    @include button-variant($btn-secondary-color, $btn-secondary-bg, $btn-secondary-border);
}
// Success appears as green
.btn-success {
    @include button-variant($btn-success-color, $btn-success-bg, $btn-success-border);
}
// Info appears as blue-green
.btn-info {
    @include button-variant($btn-info-color, $btn-info-bg, $btn-info-border);
}
// Warning appears as orange
.btn-warning {
    @include button-variant($btn-warning-color, $btn-warning-bg, $btn-warning-border);
}
// Danger and error appear as red
.btn-danger {
    @include button-variant($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}

.btn-light-default {
    @include button-variant($btn-default-color, #fff, #fff);
    &:hover {
        color: $primary!important;
        background-color: #fff!important;
        border-color: #fff!important;
    }
}
.btn-light-primary {
    color: $primary!important;
    background-color: #fff!important;
    border-color: #fff!important;

    &:hover {
        color: #fff!important;
        background-color: $primary!important;
        border-color: $primary!important;
    }
}
.btn-light-success {
    color: $success!important;
    background-color: #fff!important;
    border-color: #fff!important;

    &:hover {
        color: #fff!important;
        background-color: $success!important;
        border-color: $success!important;
    }
}
.btn-light-info {
    color: $info!important;
    background-color: #fff!important;
    border-color: #fff!important;

    &:hover {
        color: #fff!important;
        background-color: $info!important;
        border-color: $info!important;
    }
}
.btn-light-warning {
    color: $warning!important;
    background-color: #fff!important;
    border-color: #fff!important;

    &:hover {
        color: #fff!important;
        background-color: $warning!important;
        border-color: $warning!important;
    }
}
.btn-light-danger {
    color: $danger!important;
    background-color: #fff!important;
    border-color: #fff!important;

    &:hover {
        color: #fff!important;
        background-color: $danger!important;
        border-color: $danger!important;
    }
}

.btn.selected,
.btn.selected:hover,
.btn.selected:focus
{
    color: #fff!important;
    background-color: #5897FB!important;
    border-color: #5897FB!important;

    &:disabled {
        color: #787878!important;
        background-color: #E6E6E6!important;
        border-color: #E6E6E6!important;
    }
}

// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
    color: $link-color;
    font-weight: normal;
    border-radius: 0;

    &,
    &:active,
        &.active,
        &[disabled],
        fieldset[disabled] & {
        background-color: transparent;
        @include box-shadow(none);
    }
    &,
    &:hover,
        &:focus,
        &:active {
        border-color: transparent;
    }
    &:hover,
        &:focus {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
        background-color: transparent;
    }
    &[disabled],
    fieldset[disabled] & {
        &:hover,
            &:focus {
            color: $btn-link-disabled-color;
            text-decoration: none;
        }
    }
}


// Button Sizes
// --------------------------------------------------

.btn-lg {
    // line-height: ensure even-numbered height of button next to large input
    @include button-size($padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $btn-border-radius-large);
}
.btn-sm {
    // line-height: ensure proper height of button next to small input
    @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}
.btn-xs {
    @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}


// Block button
// --------------------------------------------------

.btn-block {
    display: block;
    width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
    margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
    &.btn-block {
        width: 100%;
    }
}
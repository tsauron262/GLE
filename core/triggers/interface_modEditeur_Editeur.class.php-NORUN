<?php
/* Copyright (C) 2006 Rodolphe Quiedeville  <rodolphe@quiedeville.org>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 * $Id: interface_modEditeur_Editeur.class.php-NORUN,v 1.1 2007/12/27 21:18:25 eldy Exp $
 */

/**
   \file       htdocs/includes/triggers/interface_modEditeur_editeur.class.php
   \ingroup    core
   \brief      Fichier de demo de personalisation des actions du workflow
*/


/**
   \class      InterfaceEditeur
   \brief      Classe des fonctions triggers des actions personalisées du workflow
*/

class InterfaceEditeur
{
  var $db;
  var $error;
  
  /**
   *   \brief      Constructeur.
   *   \param      DB      Handler d'accès base
   */
  function InterfaceEditeur($DB)
  {
    $this->db = $DB ;
    
    $this->name = "Editeur";
    $this->family = "editeur";
    $this->description = "Les triggers de ce composant tri les lignes commandes par stock_loc.";
    $this->revision = explode(' ','$Revision: 1.1 $');
    $this->version = $this->revision[1];
  }
  
  /**
   *   \brief      Renvoi nom du lot de triggers
   *   \return     string      Nom du lot de triggers
   */
  function getName()
  {
    return $this->name;
  }
  
  /**
   *   \brief      Renvoi descriptif du lot de triggers
   *   \return     string      Descriptif du lot de triggers
   */
  function getDesc()
  {
    return $this->description;
  }
  
  /**
   *   \brief      Renvoi version du lot de triggers
   *   \return     string      Version du lot de triggers
   */
  function getVersion()
  {
    global $langs;
    $langs->load("admin");
    
    if ($this->version == 'experimental') return $langs->trans("Experimental");
    elseif ($this->version == 'dolibarr') return DOL_VERSION;
    elseif ($this->version) return $this->version;
    else return $langs->trans("Unknown");
  }
  
  /**
   *      \brief      Fonction appelée lors du déclenchement d'un évènement Dolibarr.
   *                  D'autres fonctions run_trigger peuvent etre présentes dans includes/triggers
   *      \param      action      Code de l'evenement
   *      \param      object      Objet concern
   *      \param      user        Objet user
   *      \param      lang        Objet lang
   *      \param      conf        Objet conf
   *      \return     int         <0 si ko, 0 si aucune action faite, >0 si ok
   */
  function run_trigger($action,$object,$user,$langs,$conf)
  {
    // Mettre ici le code à exécuter en réaction de l'action
    // Les données de l'action sont stockées dans $object
    
    // Users
    if ($action == 'LINEBILL_INSERT')
      {
	dolibarr_syslog("Trigger '".$this->name."' for action '$action' launched by ".__FILE__.". id=".$object->id);

	$sql = "SELECT fd.rowid";
	$sql.= " FROM ".MAIN_DB_PREFIX."product as p,".MAIN_DB_PREFIX."facturedet as fd";
	$sql.= " WHERE fd.fk_product = p.rowid";
	$sql.= " AND fd.special_code = 0";
	$sql.= " AND fd.fk_facture = '".$object->fk_facture."'";
	$sql.= " ORDER BY p.stock_loc ASC;";
	
	$resql = $this->db->query($sql) ;
	
	if ($resql)
	  {
	    $datas = array();
	    $i = 1;
	    while ( $row = $this->db->fetch_row($resql) )
	      {
		$datas[$i] = $row[0];	    
		$i++;
	      }
	    
	    foreach($datas as $key => $value)
	      {
		$sql = "UPDATE ".MAIN_DB_PREFIX."facturedet ";
		$sql.= " SET rang=$key WHERE rowid=$value";
		$resql = $this->db->query($sql) ;
	      }
	  }
	else
	  {
	    dolibarr_syslog("Trigger '".$this->name."' in action '$action' SQL ERROR ");
	  }
      }
    else
      {
	dolibarr_syslog("Trigger '".$this->name."' for action '$action' launched by ".__FILE__.". id=".$object->id);
	return -1;
      }
    return 0;
  
  }
}
?>
